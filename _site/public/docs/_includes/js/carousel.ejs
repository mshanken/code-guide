<div class="bs-docs-section">
  <h1 id="carousel" class="page-header">Carousel <small>carousel.js</small></h1>

  <p>A slideshow component for cycling through elements, like a carousel. <strong>Nested carousels are not supported.</strong></p>

  <h2 id="carousel-examples">Examples</h2>
  <div class="bs-example" data-example-id="simple-carousel">
    <div id="carousel-example-generic" class="carousel slide" data-ride="carousel">
      <ol class="carousel-indicators">
        <li data-target="#carousel-example-generic" data-slide-to="0" class="active"></li>
        <li data-target="#carousel-example-generic" data-slide-to="1"></li>
        <li data-target="#carousel-example-generic" data-slide-to="2"></li>
      </ol>
      <div class="carousel-inner" role="listbox">
        <div class="item active">
          <img data-src="holder.js/900x500/auto/#777:#555/text:First slide" alt="First slide">
        </div>
        <div class="item">
          <img data-src="holder.js/900x500/auto/#666:#444/text:Second slide" alt="Second slide">
        </div>
        <div class="item">
          <img data-src="holder.js/900x500/auto/#555:#333/text:Third slide" alt="Third slide">
        </div>
      </div>
      <a class="left carousel-control" href="#carousel-example-generic" role="button" data-slide="prev">
        <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
      </a>
      <a class="right carousel-control" href="#carousel-example-generic" role="button" data-slide="next">
        <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
      </a>
    </div>
  </div><!-- /example -->
<pre><code class="html">
&lt;div id=&quot;carousel-example-generic&quot; class=&quot;carousel slide&quot; data-ride=&quot;carousel&quot;&gt;
  &lt;!-- Indicators --&gt;
  &lt;ol class=&quot;carousel-indicators&quot;&gt;
    &lt;li data-target=&quot;#carousel-example-generic&quot; data-slide-to=&quot;0&quot; class=&quot;active&quot;&gt;&lt;&#x2F;li&gt;
    &lt;li data-target=&quot;#carousel-example-generic&quot; data-slide-to=&quot;1&quot;&gt;&lt;&#x2F;li&gt;
    &lt;li data-target=&quot;#carousel-example-generic&quot; data-slide-to=&quot;2&quot;&gt;&lt;&#x2F;li&gt;
  &lt;&#x2F;ol&gt;

  &lt;!-- Wrapper for slides --&gt;
  &lt;div class=&quot;carousel-inner&quot; role=&quot;listbox&quot;&gt;
    &lt;div class=&quot;item active&quot;&gt;
      &lt;img src=&quot;...&quot; alt=&quot;...&quot;&gt;
      &lt;div class=&quot;carousel-caption&quot;&gt;
        ...
      &lt;&#x2F;div&gt;
    &lt;&#x2F;div&gt;
    &lt;div class=&quot;item&quot;&gt;
      &lt;img src=&quot;...&quot; alt=&quot;...&quot;&gt;
      &lt;div class=&quot;carousel-caption&quot;&gt;
        ...
      &lt;&#x2F;div&gt;
    &lt;&#x2F;div&gt;
    ...
  &lt;&#x2F;div&gt;

  &lt;!-- Controls --&gt;
  &lt;a class=&quot;left carousel-control&quot; href=&quot;#carousel-example-generic&quot; role=&quot;button&quot; data-slide=&quot;prev&quot;&gt;
    &lt;span class=&quot;glyphicon glyphicon-chevron-left&quot; aria-hidden=&quot;true&quot;&gt;&lt;&#x2F;span&gt;
    &lt;span class=&quot;sr-only&quot;&gt;Previous&lt;&#x2F;span&gt;
  &lt;&#x2F;a&gt;
  &lt;a class=&quot;right carousel-control&quot; href=&quot;#carousel-example-generic&quot; role=&quot;button&quot; data-slide=&quot;next&quot;&gt;
    &lt;span class=&quot;glyphicon glyphicon-chevron-right&quot; aria-hidden=&quot;true&quot;&gt;&lt;&#x2F;span&gt;
    &lt;span class=&quot;sr-only&quot;&gt;Next&lt;&#x2F;span&gt;
  &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
</code></pre>

  &lt;div class=&quot;bs-callout bs-callout-danger&quot; id=&quot;callout-carousel-accessibility&quot;&gt;
    &lt;h4&gt;Accessibility issue&lt;&#x2F;h4&gt;
    &lt;p&gt;The carousel component is generally not compliant with accessibility standards. If you need to be compliant, please consider other options for presenting your content.&lt;&#x2F;p&gt;
  &lt;&#x2F;div&gt;

  &lt;div class=&quot;bs-callout bs-callout-warning&quot; id=&quot;callout-carousel-transitions&quot;&gt;
    &lt;h4&gt;Transition animations not supported in Internet Explorer 8 &amp;amp; 9&lt;&#x2F;h4&gt;
    &lt;p&gt;Bootstrap exclusively uses CSS3 for its animations, but Internet Explorer 8 &amp;amp; 9 don&#39;t support the necessary CSS properties. Thus, there are no slide transition animations when using these browsers. We have intentionally decided not to include jQuery-based fallbacks for the transitions.&lt;&#x2F;p&gt;
  &lt;&#x2F;div&gt;

  &lt;div class=&quot;bs-callout bs-callout-warning&quot; id=&quot;callout-carousel-active&quot;&gt;
    &lt;h4&gt;Initial active element required&lt;&#x2F;h4&gt;
    &lt;p&gt;The &lt;code&gt;.active&lt;&#x2F;code&gt; class needs to be added to one of the slides. Otherwise, the carousel will not be visible.&lt;&#x2F;p&gt;
  &lt;&#x2F;div&gt;

  &lt;div class=&quot;bs-callout bs-callout-info&quot; id=&quot;callout-carousel-without-glyphicons&quot;&gt;
    &lt;h4&gt;Glyphicon icons not necessary&lt;&#x2F;h4&gt;
    &lt;p&gt;The &lt;code&gt;.glyphicon .glyphicon-chevron-left&lt;&#x2F;code&gt; and &lt;code&gt;.glyphicon .glyphicon-chevron-right&lt;&#x2F;code&gt; classes are not necessarily needed for the controls. Bootstrap provides &lt;code&gt;.icon-prev&lt;&#x2F;code&gt; and &lt;code&gt;.icon-next&lt;&#x2F;code&gt; as plain unicode alternatives.&lt;&#x2F;p&gt;
  &lt;&#x2F;div&gt;

  &lt;h3&gt;Optional captions&lt;&#x2F;h3&gt;
  &lt;p&gt;Add captions to your slides easily with the &lt;code&gt;.carousel-caption&lt;&#x2F;code&gt; element within any &lt;code&gt;.item&lt;&#x2F;code&gt;. Place just about any optional HTML within there and it will be automatically aligned and formatted.&lt;&#x2F;p&gt;
  &lt;div class=&quot;bs-example&quot; data-example-id=&quot;carousel-with-captions&quot;&gt;
    &lt;div id=&quot;carousel-example-captions&quot; class=&quot;carousel slide&quot; data-ride=&quot;carousel&quot;&gt;
      &lt;ol class=&quot;carousel-indicators&quot;&gt;
        &lt;li data-target=&quot;#carousel-example-captions&quot; data-slide-to=&quot;0&quot; class=&quot;active&quot;&gt;&lt;&#x2F;li&gt;
        &lt;li data-target=&quot;#carousel-example-captions&quot; data-slide-to=&quot;1&quot;&gt;&lt;&#x2F;li&gt;
        &lt;li data-target=&quot;#carousel-example-captions&quot; data-slide-to=&quot;2&quot;&gt;&lt;&#x2F;li&gt;
      &lt;&#x2F;ol&gt;
      &lt;div class=&quot;carousel-inner&quot; role=&quot;listbox&quot;&gt;
        &lt;div class=&quot;item active&quot;&gt;
          &lt;img data-src=&quot;holder.js&#x2F;900x500&#x2F;auto&#x2F;#777:#777&quot; alt=&quot;First slide image&quot;&gt;
          &lt;div class=&quot;carousel-caption&quot;&gt;
            &lt;h3&gt;First slide label&lt;&#x2F;h3&gt;
            &lt;p&gt;Nulla vitae elit libero, a pharetra augue mollis interdum.&lt;&#x2F;p&gt;
          &lt;&#x2F;div&gt;
        &lt;&#x2F;div&gt;
        &lt;div class=&quot;item&quot;&gt;
          &lt;img data-src=&quot;holder.js&#x2F;900x500&#x2F;auto&#x2F;#666:#666&quot; alt=&quot;Second slide image&quot;&gt;
          &lt;div class=&quot;carousel-caption&quot;&gt;
            &lt;h3&gt;Second slide label&lt;&#x2F;h3&gt;
            &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;&#x2F;p&gt;
          &lt;&#x2F;div&gt;
        &lt;&#x2F;div&gt;
        &lt;div class=&quot;item&quot;&gt;
          &lt;img data-src=&quot;holder.js&#x2F;900x500&#x2F;auto&#x2F;#555:#555&quot; alt=&quot;Third slide image&quot;&gt;
          &lt;div class=&quot;carousel-caption&quot;&gt;
            &lt;h3&gt;Third slide label&lt;&#x2F;h3&gt;
            &lt;p&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur.&lt;&#x2F;p&gt;
          &lt;&#x2F;div&gt;
        &lt;&#x2F;div&gt;
      &lt;&#x2F;div&gt;
      &lt;a class=&quot;left carousel-control&quot; href=&quot;#carousel-example-captions&quot; role=&quot;button&quot; data-slide=&quot;prev&quot;&gt;
        &lt;span class=&quot;glyphicon glyphicon-chevron-left&quot; aria-hidden=&quot;true&quot;&gt;&lt;&#x2F;span&gt;
        &lt;span class=&quot;sr-only&quot;&gt;Previous&lt;&#x2F;span&gt;
      &lt;&#x2F;a&gt;
      &lt;a class=&quot;right carousel-control&quot; href=&quot;#carousel-example-captions&quot; role=&quot;button&quot; data-slide=&quot;next&quot;&gt;
        &lt;span class=&quot;glyphicon glyphicon-chevron-right&quot; aria-hidden=&quot;true&quot;&gt;&lt;&#x2F;span&gt;
        &lt;span class=&quot;sr-only&quot;&gt;Next&lt;&#x2F;span&gt;
      &lt;&#x2F;a&gt;
    &lt;&#x2F;div&gt;
  &lt;&#x2F;div&gt;&lt;!-- &#x2F;example --&gt;
<pre><code class="html">
&lt;div class=&quot;item&quot;&gt;
  &lt;img src=&quot;...&quot; alt=&quot;...&quot;&gt;
  &lt;div class=&quot;carousel-caption&quot;&gt;
    &lt;h3&gt;...&lt;&#x2F;h3&gt;
    &lt;p&gt;...&lt;&#x2F;p&gt;
  &lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
</code></pre>

  &lt;h2 id=&quot;carousel-usage&quot;&gt;Usage&lt;&#x2F;h2&gt;

  &lt;h3&gt;Multiple carousels&lt;&#x2F;h3&gt;
  &lt;p&gt;Carousels require the use of an &lt;code&gt;id&lt;&#x2F;code&gt; on the outermost container (the &lt;code&gt;.carousel&lt;&#x2F;code&gt;) for carousel controls to function properly. When adding multiple carousels, or when changing a carousel&#39;s &lt;code&gt;id&lt;&#x2F;code&gt;, be sure to update the relevant controls.&lt;&#x2F;p&gt;

  &lt;h3&gt;Via data attributes&lt;&#x2F;h3&gt;
  &lt;p&gt;Use data attributes to easily control the position of the carousel. &lt;code&gt;data-slide&lt;&#x2F;code&gt; accepts the keywords &lt;code&gt;prev&lt;&#x2F;code&gt; or &lt;code&gt;next&lt;&#x2F;code&gt;, which alters the slide position relative to its current position. Alternatively, use &lt;code&gt;data-slide-to&lt;&#x2F;code&gt; to pass a raw slide index to the carousel &lt;code&gt;data-slide-to=&quot;2&quot;&lt;&#x2F;code&gt;, which shifts the slide position to a particular index beginning with &lt;code&gt;0&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
  &lt;p&gt;The &lt;code&gt;data-ride=&quot;carousel&quot;&lt;&#x2F;code&gt; attribute is used to mark a carousel as animating starting at page load. &lt;strong class=&quot;text-danger&quot;&gt;It cannot be used in combination with (redundant and unnecessary) explicit JavaScript initialization of the same carousel.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;

  &lt;h3&gt;Via JavaScript&lt;&#x2F;h3&gt;
  &lt;p&gt;Call carousel manually with:&lt;&#x2F;p&gt;
{% highlight js %}
$(&#39;.carousel&#39;).carousel()
</code></pre>

  &lt;h3 id=&quot;carousel-options&quot;&gt;Options&lt;&#x2F;h3&gt;
  &lt;p&gt;Options can be passed via data attributes or JavaScript. For data attributes, append the option name to &lt;code&gt;data-&lt;&#x2F;code&gt;, as in &lt;code&gt;data-interval=&quot;&quot;&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
  &lt;div class=&quot;table-responsive&quot;&gt;
    &lt;table class=&quot;table table-bordered table-striped js-options-table&quot;&gt;
      &lt;thead&gt;
       &lt;tr&gt;
         &lt;th&gt;Name&lt;&#x2F;th&gt;
         &lt;th&gt;type&lt;&#x2F;th&gt;
         &lt;th&gt;default&lt;&#x2F;th&gt;
         &lt;th&gt;description&lt;&#x2F;th&gt;
       &lt;&#x2F;tr&gt;
      &lt;&#x2F;thead&gt;
      &lt;tbody&gt;
       &lt;tr&gt;
         &lt;td&gt;interval&lt;&#x2F;td&gt;
         &lt;td&gt;number&lt;&#x2F;td&gt;
         &lt;td&gt;5000&lt;&#x2F;td&gt;
         &lt;td&gt;The amount of time to delay between automatically cycling an item. If false, carousel will not automatically cycle.&lt;&#x2F;td&gt;
       &lt;&#x2F;tr&gt;
       &lt;tr&gt;
         &lt;td&gt;pause&lt;&#x2F;td&gt;
         &lt;td&gt;string&lt;&#x2F;td&gt;
         &lt;td&gt;&quot;hover&quot;&lt;&#x2F;td&gt;
         &lt;td&gt;Pauses the cycling of the carousel on mouseenter and resumes the cycling of the carousel on mouseleave.&lt;&#x2F;td&gt;
       &lt;&#x2F;tr&gt;
       &lt;tr&gt;
         &lt;td&gt;wrap&lt;&#x2F;td&gt;
         &lt;td&gt;boolean&lt;&#x2F;td&gt;
         &lt;td&gt;true&lt;&#x2F;td&gt;
         &lt;td&gt;Whether the carousel should cycle continuously or have hard stops.&lt;&#x2F;td&gt;
       &lt;&#x2F;tr&gt;
       &lt;tr&gt;
         &lt;td&gt;keyboard&lt;&#x2F;td&gt;
         &lt;td&gt;boolean&lt;&#x2F;td&gt;
         &lt;td&gt;true&lt;&#x2F;td&gt;
         &lt;td&gt;Whether the carousel should react to keyboard events.&lt;&#x2F;td&gt;
       &lt;&#x2F;tr&gt;
      &lt;&#x2F;tbody&gt;
    &lt;&#x2F;table&gt;
  &lt;&#x2F;div&gt;&lt;!-- &#x2F;.table-responsive --&gt;

  &lt;h3 id=&quot;carousel-methods&quot;&gt;Methods&lt;&#x2F;h3&gt;

  &lt;h4&gt;&lt;code&gt;.carousel(options)&lt;&#x2F;code&gt;&lt;&#x2F;h4&gt;
  &lt;p&gt;Initializes the carousel with an optional options &lt;code&gt;object&lt;&#x2F;code&gt; and starts cycling through items.&lt;&#x2F;p&gt;
{% highlight js %}
$(&#39;.carousel&#39;).carousel({
  interval: 2000
})
</code></pre>

  &lt;h4&gt;&lt;code&gt;.carousel(&#39;cycle&#39;)&lt;&#x2F;code&gt;&lt;&#x2F;h4&gt;
  &lt;p&gt;Cycles through the carousel items from left to right.&lt;&#x2F;p&gt;

  &lt;h4&gt;&lt;code&gt;.carousel(&#39;pause&#39;)&lt;&#x2F;code&gt;&lt;&#x2F;h4&gt;
  &lt;p&gt;Stops the carousel from cycling through items.&lt;&#x2F;p&gt;


  &lt;h4&gt;&lt;code&gt;.carousel(number)&lt;&#x2F;code&gt;&lt;&#x2F;h4&gt;
  &lt;p&gt;Cycles the carousel to a particular frame (0 based, similar to an array).&lt;&#x2F;p&gt;

  &lt;h4&gt;&lt;code&gt;.carousel(&#39;prev&#39;)&lt;&#x2F;code&gt;&lt;&#x2F;h4&gt;
  &lt;p&gt;Cycles to the previous item.&lt;&#x2F;p&gt;

  &lt;h4&gt;&lt;code&gt;.carousel(&#39;next&#39;)&lt;&#x2F;code&gt;&lt;&#x2F;h4&gt;
  &lt;p&gt;Cycles to the next item.&lt;&#x2F;p&gt;

  &lt;h3 id=&quot;carousel-events&quot;&gt;Events&lt;&#x2F;h3&gt;
  &lt;p&gt;Bootstrap&#39;s carousel class exposes two events for hooking into carousel functionality.&lt;&#x2F;p&gt;
  &lt;p&gt;Both events have the following additional properties:&lt;&#x2F;p&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;code&gt;direction&lt;&#x2F;code&gt;: The direction in which the carousel is sliding (either &lt;code&gt;&quot;left&quot;&lt;&#x2F;code&gt; or &lt;code&gt;&quot;right&quot;&lt;&#x2F;code&gt;).&lt;&#x2F;li&gt;
    &lt;li&gt;&lt;code&gt;relatedTarget&lt;&#x2F;code&gt;: The DOM element that is being slid into place as the active item.&lt;&#x2F;li&gt;
  &lt;&#x2F;ul&gt;
  &lt;p&gt;All carousel events are fired at the carousel itself (i.e. at the &lt;code&gt;&amp;lt;div class=&quot;carousel&quot;&amp;gt;&lt;&#x2F;code&gt;).&lt;&#x2F;p&gt;
  &lt;div class=&quot;table-responsive&quot;&gt;
    &lt;table class=&quot;table table-bordered table-striped bs-events-table&quot;&gt;
      &lt;thead&gt;
       &lt;tr&gt;
         &lt;th&gt;Event Type&lt;&#x2F;th&gt;
         &lt;th&gt;Description&lt;&#x2F;th&gt;
       &lt;&#x2F;tr&gt;
      &lt;&#x2F;thead&gt;
      &lt;tbody&gt;
       &lt;tr&gt;
         &lt;td&gt;slide.bs.carousel&lt;&#x2F;td&gt;
         &lt;td&gt;This event fires immediately when the &lt;code&gt;slide&lt;&#x2F;code&gt; instance method is invoked.&lt;&#x2F;td&gt;
       &lt;&#x2F;tr&gt;
       &lt;tr&gt;
         &lt;td&gt;slid.bs.carousel&lt;&#x2F;td&gt;
         &lt;td&gt;This event is fired when the carousel has completed its slide transition.&lt;&#x2F;td&gt;
       &lt;&#x2F;tr&gt;
      &lt;&#x2F;tbody&gt;
    &lt;&#x2F;table&gt;
  &lt;&#x2F;div&gt;&lt;!-- &#x2F;.table-responsive --&gt;
{% highlight js %}
$(&#39;#myCarousel&#39;).on(&#39;slide.bs.carousel&#39;, function () {
  &#x2F;&#x2F; do something…
})
</code></pre>
</div>
